The d{motion} command can operate on a single character (dl), a complete
word (daw), or an entire paragraph (dap). Its reach is defined by the motion.
The same goes for c{motion}, y{motion}, and a handful of others.

The combination of operators with motions forms a kind of grammar. The
first rule is simple: an action is composed from an operator followed by a
motion. Learning new motions and operators is like learning the vocabulary
of Vim.

gUaw -> convert the current word to SHOUTY case. 
dap -> delete paragraph
gUap -> make the whole paragraph shout.

When an operator command is invoked in duplicate, it acts upon the current line.
dd -> delete the current line
>> indents the current line.
gU command is a special case. We can make it act upon
the current line by running either gUgU or the shorthand gUU.

Trigger || Effect
*****************
c       || Change
d       || Delete
y       || Yank into register
g~      || Swap case
gu      || Make lowercase
gU      || Make uppercase
>       || Shift right
<       || Shift lef

\\ap -> toggle commenting for the current paragraph.
\\G -> comment from the current line to the end of the file. 
\\\ comments the current line.
